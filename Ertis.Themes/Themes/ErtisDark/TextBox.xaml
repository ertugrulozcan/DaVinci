<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors">
    <SolidColorBrush x:Key="TextBoxForeground" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TextBoxBorder"  Color="#FF4979B2" />
    
    <SolidColorBrush x:Key="TextBoxBackground" Color="#474444" />
    

    <SolidColorBrush x:Key="HoverTextBoxForeground" Color="#FFFFFF"/>
    <LinearGradientBrush x:Key="HoverTextBoxBorder" EndPoint="0,0" StartPoint="0,1">
        <GradientStop Color="#585858" Offset="0"/>
        <GradientStop Color="#797979" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HoverTextBoxBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#3D3D3D" Offset="0"/>
        <GradientStop Color="#3D3D3D" Offset="0.3"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="FocusedTextBoxForeground" Color="#FFFFFF"/>
    <LinearGradientBrush x:Key="FocusedTextBoxBorder" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#585858" Offset="0"/>
        <GradientStop Color="#797979" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FocusedTextBoxBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#0B0B0B" Offset="0"/>
        <GradientStop Color="#0B0B0B" Offset="0.3"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledTextBoxForeground" Color="#696969"/>
    <LinearGradientBrush x:Key="DisabledTextBoxBorder" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#525252" Offset="0"/>
        <GradientStop Color="#939393" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DisabledTextBoxBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#A6A6A6" Offset="0"/>
        <GradientStop Color="#CACACA" Offset="0.3"/>
    </LinearGradientBrush>


    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="1,2,1,1"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource HoverTextBoxBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverTextBoxBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource HoverTextBoxForeground}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource FocusedTextBoxBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource FocusedTextBoxBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource FocusedTextBoxForeground}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource DisabledTextBoxBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledTextBoxBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledTextBoxForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource HoverTextBoxBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverTextBoxBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource HoverTextBoxForeground}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource FocusedTextBoxBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource FocusedTextBoxBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource FocusedTextBoxForeground}"/>
                            <Setter Property="CaretBrush" Value="{StaticResource FocusedTextBoxForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource DisabledTextBoxBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledTextBoxBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledTextBoxForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="{dxet:TextEditThemeKey ResourceKey=NullTextForeground}" Color="#939191" />
    
    <Style  TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Border.CornerRadius" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxe:TextEdit}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseOut">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseIn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.4"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="BG" Fill="{TemplateBinding Background}"/>
                        <Rectangle x:Name="Highlight" Opacity="0" Fill="{StaticResource TextBoxBorder}"/>
                        <Border x:Name="Bd" SnapsToDevicePixels="True" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <DockPanel SnapsToDevicePixels="True" LastChildFill="True">
                                <dxe:ErrorControl x:Name="PART_ErrorPresenter"/>
                                <!--<dxe:EditorControl DockPanel.Dock="Left" x:Name="PART_Content" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).ActualEditorControlTemplate, RelativeSource={RelativeSource Self}}"/>-->
                                <dxe:EditorControl x:Name="PART_Content" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).ActualEditorControlTemplate, RelativeSource={RelativeSource Self}}" Focusable="False" DockPanel.Dock="Left" Foreground="#FFC3C57E"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FF6D6D6D"/>
                            <Setter Property="Background" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TextBoxBorder}"/>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseIn_BeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseOut_BeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="DarkKhaki"/>
                            <Setter Property="Background" Value="#0FC3C57E"/>
                            <Setter Property="Foreground" Value="Khaki"/>
                            <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
            
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>
</ResourceDictionary>