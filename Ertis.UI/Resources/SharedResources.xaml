<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:telerikControls="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls" 
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:lex="http://wpflocalizeextension.codeplex.com">

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Ertis.Themes;component/Themes/ErtisLight.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Ertis.Themes;component/Themes/ErtisDark.xaml" />
    </ResourceDictionary.MergedDictionaries>-->

    <Style x:Key="SubTitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="{StaticResource ContrastBrush10}" />
        <Setter Property="Margin" Value="1,0,0,4" />
    </Style>

    <Style x:Key="NoBorderListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="CellTypeTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ContrastBrush5}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TimesDeleteButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <fa:ImageAwesome Icon="TimesCircle" 
                                         Foreground="{TemplateBinding Foreground}" 
                                         SnapsToDevicePixels="True" 
                                         VerticalAlignment="Center" 
                                         HorizontalAlignment="Center" 
                                         Width="{TemplateBinding Width}" 
                                         Height="{TemplateBinding Height}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="#CC1414" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FE1212" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalenderButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="BorderBrush" Value="AliceBlue" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <fa:ImageAwesome Icon="Calendar" 
                                         Foreground="{TemplateBinding Foreground}" 
                                         SnapsToDevicePixels="True" 
                                         VerticalAlignment="Center" 
                                         HorizontalAlignment="Center" 
                                         Width="14" 
                                         Height="14" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ContrastBrush16}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ContrastBrush16}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryChromeBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ContrastBrush3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="GroupBoxBackground" Color="#4979B2"/>
    <SolidColorBrush x:Key="LightBorderBrush" Color="#4979B2"/>
    <SolidColorBrush x:Key="DarkBorderBrush" Color="#4979B2"/>

    <SolidColorBrush x:Key="DisabledCombBoxBtnForeground" Color="{DynamicResource Color12}" />

    <LinearGradientBrush x:Key="ComboBoxPopUpBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{DynamicResource Color6}" Offset="0" />
        <GradientStop Color="{DynamicResource Color14}" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ComboBoxPopUpInnerBackground" Color="{DynamicResource Color13}" />

    <SolidColorBrush x:Key="ComboBoxItemForeground" Color="{DynamicResource ContrastColor1}" />
    <SolidColorBrush x:Key="ComboBoxItemBackground" Color="{DynamicResource Color13}"/>
    <SolidColorBrush x:Key="ComboBoxItemBorder" Color="Transparent"/>

    <SolidColorBrush x:Key="HoverComboBoxItemForeground" Color="{DynamicResource ContrastColor1}" />
    <SolidColorBrush x:Key="HoverComboBoxItemBackground" Color="#4979B2" />

    <SolidColorBrush x:Key="HoverComboBoxItemBorder" Color="Transparent" />

    <SolidColorBrush x:Key="SelectedComboBoxItemForeground" Color="{DynamicResource ContrastColor1}" />
    <SolidColorBrush x:Key="SelectedComboBoxItemBackground" Color="{DynamicResource Color10}" />

    <SolidColorBrush x:Key="SelectedComboBoxItemBorder" Color="Transparent" />

    <SolidColorBrush x:Key="ButtonInnerBackground" Color="Transparent" />

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource ContrastBrush5}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="25" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="BorderContent" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Grid.Column="1">
                                <Border Background="{StaticResource ButtonInnerBackground}">
                                    <Grid>
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                              RecognizesAccessKey="True"
                                                              Margin="{TemplateBinding Padding}" />

                                        <Path x:Name="Arrow" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Grid.Column="1" />
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#11EEEEEE"/>
                            <Setter Property="BorderBrush" Value="#666666"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#15FFFFFF"/>
                            <Setter Property="BorderBrush" Value="#77999999"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="#727272"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledCombBoxBtnForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="CellTypeComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource ContrastBrush1}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="3,4,3,3"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                          Style="{StaticResource ComboBoxToggleButton}" 
                                          Focusable="False" 
                                          MinWidth="30"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          ClickMode="Press"
                                          Grid.Column="2" />
                        <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False" 
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Margin="6.5,6,30,4" />

                        <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}" 
                                     Template="{StaticResource ComboBoxTextBox}" 
                                     HorizontalAlignment="Left" 
                                     VerticalAlignment="Center" 
                                     Margin="10,5,30,5"
                                     Focusable="True" 
                                     Background="Transparent"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border SnapsToDevicePixels="True" x:Name="DropDownBorder" Background="{StaticResource ComboBoxPopUpBackground}" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,0,0" >
                                    <Border Background="{StaticResource ComboBoxPopUpInnerBackground}"  BorderThickness="0,0,1,1" BorderBrush="{StaticResource LightBorderBrush}">
                                        <ScrollViewer Margin="2" SnapsToDevicePixels="True">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledCombBoxBtnForeground}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Foreground" Value="{StaticResource ComboBoxItemForeground}"/>
        <Setter Property="Background" Value="{StaticResource ComboBoxItemBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxItemBorder}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="OuterBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" >
                        <ContentPresenter />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource SelectedComboBoxItemBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource SelectedComboBoxItemBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource SelectedComboBoxItemForeground}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverComboBoxItemBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverComboBoxItemBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource HoverComboBoxItemForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
