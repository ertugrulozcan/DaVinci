<UserControl x:Class="Ertis.Main.Views.LeftSidePanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ertis.Main.Views"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:Ertis.Shared.Converters;assembly=Ertis.Shared"
             xmlns:navmode="clr-namespace:Ertis.Shared.Services;assembly=Ertis.Shared"
             xmlns:ertawesome="clr-namespace:ErtAwesome;assembly=ErtAwesome"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="300"
             Width="50"
             x:Name="BaseLayout">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:ReferenceEqualToBooleanConverter x:Key="ReferenceEqualToBooleanConverter" />

        <Storyboard x:Key="CloseSB">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UserControl.Width)" Storyboard.Target="{Binding ElementName=BaseLayout}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="OpenSB">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UserControl.Width)" Storyboard.Target="{Binding ElementName=BaseLayout}">
                <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="270"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Style x:Key="ErtisButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <!--<ertawesome:ImageIcon Icon="Ertis" Fill="{TemplateBinding Foreground}" />-->
                            <Viewbox Stretch="Uniform">
                                <Path Data="F1 M 159,289L 498,92L 729,225L 389,423 Z M 437, 450L 666, 318L 728, 354L 499, 486 Z M 780, 254L 840, 290L 777, 327L 717, 291 Z M 145, 317L 375, 449L 375, 528L 145, 395 Z M 423, 476L 484, 512L 484, 591L 423, 555 Z M 512, 512L 742, 380L 742, 459L 512, 591 Z M 790, 353L 853, 317L 853, 395L 790, 432 Z M 145, 472L 375, 603L 375, 683L 207, 588L 207, 663L 375, 759L 375, 844L 145, 710 Z M 423, 630L 484, 666L 484, 907L 423, 871 Z M 512, 666L 742, 536L 742, 613L 574, 710L 574, 788L 742, 689L 742, 774L 512, 907 Z M 790, 509L 853, 473L 853, 710L 790, 747 Z" Fill="{TemplateBinding Foreground}" Stretch="Fill" VerticalAlignment="Stretch" HorizontalAlignment="Center" />
                            </Viewbox>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="#EEEEEE" />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#DEDEDE" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="#FFFFFF" />
                            </Trigger>

                            <DataTrigger Binding="{Binding IsPanelOpened}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource OpenSB}" />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource CloseSB}" />
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DashboardMenuItemButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent" BorderBrush="{DynamicResource HamburgerMenuBorderBrush}" BorderThickness="0,0,0,1">
                            <Border Background="{TemplateBinding Background}" Height="40">
                                <Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="50" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Grid Grid.Column="0">
                                            <fa:ImageAwesome Icon="Home"
                                                             Foreground="{DynamicResource PrimaryChromeBrush}"
                                                             UseLayoutRounding="True"
                                                             SnapsToDevicePixels="True"
                                                             VerticalAlignment="Center" 
                                                             HorizontalAlignment="Center" 
                                                             Width="16" 
                                                             Height="16">
                                            </fa:ImageAwesome>
                                        </Grid>

                                        <Grid Grid.Column="1">
                                            <TextBlock Text="{lex:Loc Dashboard}" Foreground="AliceBlue" VerticalAlignment="Center" />
                                        </Grid>
                                    </Grid>

                                    <Grid x:Name="SelectedIndicatorStick" Background="{DynamicResource PrimaryChromeBrush}" Width="4" HorizontalAlignment="Left" Visibility="Collapsed" />
                                </Grid>
                            </Border>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource LeftPanelMenuItemBrush.Hover}" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource LeftPanelMenuItemBrush.Selected}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding DataContext.WindowNavigationService.NavigationMode, ElementName=BaseLayout, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                         Value="{x:Static navmode:NavigationWrapperType.Page}">
                                <Setter Property="Visibility" Value="Visible" TargetName="SelectedIndicatorStick" />
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="LightGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SettingsMenuItemButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent" BorderBrush="{DynamicResource HamburgerMenuBorderBrush}" BorderThickness="0,1,0,0">
                            <Border Background="{TemplateBinding Background}" Height="40">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0">
                                        <fa:ImageAwesome Icon="Cog"
                                                         Foreground="AliceBlue"
                                                         UseLayoutRounding="True"
                                                         SnapsToDevicePixels="True"
                                                         VerticalAlignment="Center" 
                                                         HorizontalAlignment="Center" 
                                                         Width="14" 
                                                         Height="14">
                                        </fa:ImageAwesome>
                                    </Grid>

                                    <Grid Grid.Column="1">
                                        <TextBlock Text="{lex:Loc Settings}" Foreground="AliceBlue" VerticalAlignment="Center" />
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource LeftPanelMenuItemBrush.Hover}" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource LeftPanelMenuItemBrush.Selected}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="LightGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Border Background="{DynamicResource LeftPanelBackgroundBrush2}" BorderBrush="{DynamicResource PrimaryBorderBrush}" BorderThickness="0,0,1,0">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border Background="{DynamicResource LeftPanelBackgroundBrush1}" BorderBrush="{DynamicResource PrimaryBorderBrush}" BorderThickness="0,0,0,1" Padding="11,9" Grid.Row="0">
                <Grid>
                    <Grid Visibility="{Binding PanelClosedComponentsVisibility}">
                        <Button Style="{StaticResource ErtisButtonStyle}" Command="{Binding LeftSidePanelCommand}" HorizontalAlignment="Left" Width="27" Height="27" />
                    </Grid>

                    <Grid Visibility="{Binding PanelOpenedComponentsVisibility}">
                        <Border x:Name="ProfileCard">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0">
                                    <Ellipse Stroke="AliceBlue" StrokeThickness="1" Height="30" Width="30">
                                        <Ellipse.Fill>
                                            <ImageBrush ImageSource="/Ertis.Main;component/Resources/avatar.png" Stretch="Fill" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>

                                <Grid Grid.Column="1" Margin="13,0,0,0">
                                    <StackPanel VerticalAlignment="Center">
                                        <TextBlock Text="DaVinci | Ertis" Foreground="White" FontWeight="Thin" FontSize="13" />
                                        <TextBlock Text="{x:Static sys:Environment.UserName}" Foreground="#AAEEEEEE" FontSize="11" Margin="0,3,0,0" />
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </Border>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Button DataContext="{Binding DashboardVMI}" Command="{Binding Command}" Style="{StaticResource DashboardMenuItemButtonStyle}" />
                </Grid>

                <ListBox x:Name="MenuListBox" ItemsSource="{Binding MainViewMenuItems}" SelectedItem="{Binding SelectedVMI}" SelectionChanged="ListBox_SelectionChanged" Margin="0,5,0,0" Grid.Row="1">
                    <ListBox.Style>
                        <Style TargetType="{x:Type ListBox}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                        <ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Disabled">
                                            <ItemsPresenter Height="{TemplateBinding Height}" MaxHeight="{TemplateBinding MaxHeight}" />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Setter Property="ItemContainerStyle">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="Margin" Value="0,0,0,4" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="*" />
                                                        </Grid.RowDefinitions>

                                                        <Border Background="{TemplateBinding Background}" 
                                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                Height="40"
                                                                Grid.Row="0">
                                                            <Grid>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="50" />
                                                                        <ColumnDefinition Width="*" />
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="0">
                                                                        <!--<fa:ImageAwesome Icon="{Binding FontAwesomeIcon}" Foreground="AliceBlue" VerticalAlignment="Center" HorizontalAlignment="Center" Width="11" Height="11" />-->
                                                                        <ContentControl Content="{Binding AwesomeIcon}" 
                                                                                        Foreground="AliceBlue"
                                                                                        UseLayoutRounding="True"
                                                                                        SnapsToDevicePixels="True"
                                                                                        VerticalAlignment="Center" 
                                                                                        HorizontalAlignment="Center" 
                                                                                        Width="12" 
                                                                                        Height="12">
                                                                        </ContentControl>
                                                                    </Grid>

                                                                    <Grid Grid.Column="1">
                                                                        <Grid.Resources>
                                                                            <lex:Loc x:Key="LocalizedHeader" x:Name="LocalizedHeader" />
                                                                        </Grid.Resources>

                                                                        <lex:LocBinding Source="{Binding Title, Mode=OneWay}" Target="{x:Reference LocalizedHeader}" />
                                                                        <TextBlock Text="{x:Reference LocalizedHeader}" Foreground="White" VerticalAlignment="Center" />
                                                                    </Grid>
                                                                </Grid>

                                                                <Grid x:Name="SelectedIndicatorStick" Background="{DynamicResource PrimaryChromeBrush}" Width="4" HorizontalAlignment="Left" Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>

                                                        <!--Visibility="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" -->
                                                        <Border x:Name="SubMenuBorder" Background="#33000000" Padding="0,2" Height="0" Grid.Row="1">
                                                            <Grid>
                                                                <ItemsControl ItemsSource="{Binding Children}">
                                                                    <ItemsControl.ItemsPanel>
                                                                        <ItemsPanelTemplate>
                                                                            <StackPanel IsItemsHost="True" Orientation="Vertical" />
                                                                        </ItemsPanelTemplate>
                                                                    </ItemsControl.ItemsPanel>

                                                                    <ItemsControl.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <Button Command="{Binding Command}">
                                                                                <Button.Style>
                                                                                    <Style TargetType="{x:Type Button}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                        <Setter Property="BorderThickness" Value="0" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                                                    <Border Background="{TemplateBinding Background}" Height="30" Padding="20,0,0,0">
                                                                                                        <Grid>
                                                                                                            <Grid.ColumnDefinitions>
                                                                                                                <ColumnDefinition Width="40" />
                                                                                                                <ColumnDefinition Width="*" />
                                                                                                            </Grid.ColumnDefinitions>

                                                                                                            <Grid Grid.Column="0">
                                                                                                                <ContentControl Content="{Binding AwesomeIcon}" 
                                                                                                                                Foreground="AliceBlue"
                                                                                                                                UseLayoutRounding="True"
                                                                                                                                SnapsToDevicePixels="True"
                                                                                                                                VerticalAlignment="Center" 
                                                                                                                                HorizontalAlignment="Center" 
                                                                                                                                Width="11" 
                                                                                                                                Height="11">
                                                                                                                </ContentControl>
                                                                                                            </Grid>

                                                                                                            <Grid Grid.Column="1">
                                                                                                                <Grid.Resources>
                                                                                                                    <lex:Loc x:Key="LocalizedHeader" x:Name="LocalizedHeader" />
                                                                                                                </Grid.Resources>

                                                                                                                <lex:LocBinding Source="{Binding Title, Mode=OneWay}" Target="{x:Reference LocalizedHeader}" />
                                                                                                                <TextBlock Text="{x:Reference LocalizedHeader}" Foreground="AliceBlue" VerticalAlignment="Center" Margin="0,1,0,0" />
                                                                                                            </Grid>
                                                                                                        </Grid>
                                                                                                    </Border>

                                                                                                    <ControlTemplate.Triggers>
                                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                                            <Setter Property="Background" Value="Transparent" />
                                                                                                        </Trigger>
                                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                                            <Setter Property="Background" Value="{DynamicResource LeftPanelMenuItemBrush.Hover}" />
                                                                                                            <Setter Property="Cursor" Value="Hand" />
                                                                                                        </Trigger>
                                                                                                        <Trigger Property="IsPressed" Value="True">
                                                                                                            <Setter Property="Background" Value="{DynamicResource LeftPanelMenuItemBrush.Selected}" />
                                                                                                        </Trigger>
                                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                                            <Setter Property="Background" Value="LightGray" />
                                                                                                        </Trigger>
                                                                                                    </ControlTemplate.Triggers>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Button.Style>
                                                                            </Button>
                                                                        </DataTemplate>
                                                                    </ItemsControl.ItemTemplate>
                                                                </ItemsControl>
                                                            </Grid>
                                                        </Border>
                                                    </Grid>

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Background" Value="{DynamicResource LeftPanelMenuItemBrush.Normal}" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource LeftPanelMenuItemBrush.Hover}" />
                                                            <Setter Property="Cursor" Value="Hand" />
                                                        </Trigger>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource LeftPanelMenuItemBrush.Selected}" />
                                                            <Setter Property="BorderThickness" Value="0,1" />
                                                            <Setter Property="Visibility" Value="Visible" TargetName="SelectedIndicatorStick" />
                                                        </Trigger>
                                                        <DataTrigger Value="True">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource ReferenceEqualToBooleanConverter}">
                                                                    <Binding Path="DataContext.HiddenSelectedVMI" ElementName="BaseLayout" Mode="OneWay" />
                                                                    <Binding Path="." />
                                                                    <Binding Path="DataContext.IsPanelOpened" ElementName="BaseLayout" />
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Background" Value="{DynamicResource LeftPanelMenuItemBrush.Selected}" />
                                                            <Setter Property="BorderThickness" Value="0,1" />
                                                        </DataTrigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Background" Value="LightGray" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Style>
                </ListBox>

                <Grid Grid.Row="2">
                    <Button DataContext="{Binding SettingsVMI}" Command="{Binding Command}" Style="{StaticResource SettingsMenuItemButtonStyle}" />
                </Grid>
            </Grid>
        </Grid>
    </Border>
</UserControl>